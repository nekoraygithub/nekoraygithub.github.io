<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://nekoraygithub.github.io/news/article-69172.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>设计模式学习笔记装饰器模式及其应用详解</title>
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
        <meta name="description" content="装饰器（Decorator）模式：指不改变现有对象结构的情况下，动态地给该对象增加额外功能。 一、装饰器模式介绍 装饰器模式允许向一个现有的对象添加新的功能，同时不改变其结果。比如Java 中的IO框" />
        <!-- Favicon -->
    <link href="/assets/website/img/nekoraygithub/favicon.ico" rel="icon">

    <meta name="author" content="Nekoray Github节点订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://nekoraygithub.github.io/news/article-69172.htm" />
    <meta property="og:site_name" content="Nekoray Github节点订阅官网" />
    <meta property="og:title" content="设计模式学习笔记装饰器模式及其应用详解" />
    <meta property="og:image" content="https://nekoraygithub.github.io/uploads/20240819/d16f06347dabc8cc49410f442888c354.webp" />
        <meta property="og:release_date" content="2025-03-07T06:36:19" />
    <meta property="og:updated_time" content="2025-03-07T06:36:19" />
        <meta property="og:description" content="装饰器（Decorator）模式：指不改变现有对象结构的情况下，动态地给该对象增加额外功能。 一、装饰器模式介绍 装饰器模式允许向一个现有的对象添加新的功能，同时不改变其结果。比如Java 中的IO框" />
    
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="设计模式学习笔记装饰器模式及其应用详解">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- google-fonts -->
    <link href="//fonts.googleapis.com/css2?family=Ubuntu:wght@300;400;500;700&display=swap" rel="stylesheet">
    <!-- //google-fonts -->
    <!-- Font-Awesome-Icons-CSS -->
    <link rel="stylesheet" href="/assets/website/css/nekoraygithub/fontawesome-all.min.css">
    <!-- Template CSS Style link -->
    <link rel="stylesheet" href="/assets/website/css/nekoraygithub/style-starter.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-PLCXEZFQTC"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-PLCXEZFQTC');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!--header-->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke px-0">
                <a class="navbar-brand" href="/">
                                <span>Nekoray Github</span>
                                </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-lg-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/free-nodes/">免费节点</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/client.htm">客户端</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/news/">新闻资讯</a>
                        </li>
                                            </ul>
                </div>
                <!-- //search button -->
                <!-- toggle switch for light and dark theme -->
                <div class="cont-ser-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!--//header-->
    <!-- inner banner -->
    <div class="inner-banner">
        <section class="w3l-breadcrumb">
            <div class="container">
                <h1 class="inner-text-title font-weight-bold mb-2">设计模式学习笔记装饰器模式及其应用详解</h1>
                <ul class="breadcrumbs-custom-path">
                    <li><a href="/">首页</a></li>
                    <li><a href="/news/"><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span>新闻资讯</a></li>
                    <li class="active"><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span>正文</li>
                </ul>
            </div>
        </section>
    </div>
    <!-- //inner banner -->
    <!-- about section -->
    <div class="w3l-content-photo-5 py-5">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="NekoRayNode节点订阅站" data-url="https://nekoraynode.github.io">
                  				  				  				<p>装饰器（Decorator）模式：指不改变现有对象结构的情况下，动态地给该对象增加额外功能。</p> <h2 id="一装饰器模式介绍">一、装饰器模式介绍</h2> <p>装饰器模式允许向一个现有的对象添加新的功能，同时不改变其结果。比如Java 中的IO框架中，<code>FileInputStream</code>（处理文件）、<code>ByteArrayInputStream</code>（处理字节数组）、<code>BufferedInputStream</code>（带缓存的处理类）等就是对<code>InputStream</code>进行的功能扩展，这就是装饰器模式的典型应用。比如下面就是以缓存方式读取输入流：</p> <pre><code class="language-java">InputStream inputStream = new BufferedInputStream(new FileInputStream("test.txt")); byte[] data = new byte[128]; while(inputStream.read(data) != -1){     //... }</code></pre> <h3 id="11-装饰器模式结构">1.1 装饰器模式结构</h3> <p>装饰器主要使用组合关系来创建一个装饰对象，用于包裹真实对象，并在保持真实对象的类结构不变的前提下为其提供额外的功能。具体的基本结构如下所示：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/16f634c1d272c2f78720f8b02dc865d4.jpg" alt="设计模式学习笔记装饰器模式及其应用详解"></p> <ul> <li><code>Component</code>：抽象构件，定义一个抽象接口以规范准备接收附加责任的对象</li> <li><code>ComponentA</code>：具体构件，实现抽象构件，通过装饰角色为其添加一些职责</li> <li><code>Decorator</code>：抽象装饰构件，并包含具体构件的实例</li> <li><code>DecoratorA、DecoratorB</code>：实现抽象装饰构件的具体装饰构件，包含实现抽象装饰的相关方法</li> <li><code>Client</code>：客户端</li> </ul> <h3 id="12-装饰器模式实现">1.2 装饰器模式实现</h3> <p>根据上面的类图可以实现如下代码：</p> <pre><code class="language-java">/**  * @description: 抽象构件角色  * @author: wjw  * @date: 2022/3/31  */ public interface Component {      public void operation(); }  /**  * @description:具体构件角色  * @author: wjw  * @date: 2022/3/31  */ public class ComponentA implements Component{      public ComponentA() {         System.out.println("创建具体构件componentA");     }      @Override     public void operation() {         System.out.println("我是具体构件A的operation方法");     } }  /**  * @description: 抽象装饰  * @author: wjw  * @date: 2022/3/31  */ public class Decorator implements Component{      private Component component;      public Decorator(Component component) {         this.component = component;     }      @Override     public void operation() {         component.operation();     } }  /**  * @description: 具体装饰角色A  * @author: wjw  * @date: 2022/3/31  */ public class DecoratorA extends Decorator{      public DecoratorA(Component component) {         super(component);     }      @Override     public void operation() {         super.operation();         addedFunction();     }      /**      * 增加的额外功能      */     public void addedFunction() {         System.out.println("我是为具体装饰角色A增加额外功能方法addedFunction");     } }  /**  * @description: 具体装饰角色B  * @author: wjw  * @date: 2022/3/31  */ public class DecoratorB extends Decorator{      public DecoratorB(Component component) {         super(component);     }      @Override     public void operation() {         super.operation();         addedFunction();     }      private void addedFunction() {         System.out.println("为具体装饰角色增加额外的功能B");     } }  /**  * @description: 客户端  * @author: wjw  * @date: 2022/3/31  */ public class DecoratiorClient {      public static void main(String[] args) {         Component componentA = new ComponentA();         componentA.operation();         Decorator decoratorA = new DecoratorA(componentA);         decoratorA.operation();     } }</code></pre> <h2 id="二装饰器模式应用场景">二、装饰器模式应用场景</h2> <h3 id="21-java-io-类中的应用">2.1 Java IO 类中的应用</h3> <p>在开始介绍中提到，IO中有很多装饰器的应用：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/040f51929fdfdad40acbd738e44de053.jpg" alt="设计模式学习笔记装饰器模式及其应用详解"></p> <p>如上图所示，比如<code>InputStream</code>后面的若干装饰器类都是对其的功能扩展。</p> <h3 id="22-mybatis-中-cache的应用">2.2 MyBatis 中 Cache的应用</h3> <p>Cache 中除了有数据存储和缓存的基本功能外还有其他附加的 Cache 类，比如有 FifoCache（先进先出）、LruCache（最近最少使用LRU）、SychronizedCache（防止多线程并发访问）的众多附加功能的缓存类。都是装饰器的应用：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/cc20d96d7aea856e638014c7e88036dd.jpg" alt="设计模式学习笔记装饰器模式及其应用详解"></p> <h2 id="参考资料">参考资料</h2> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://mp.weixin.qq.com/s/hDJs6iG_YPww7yeiPxmZLw"  target="_blank" rel="nofollow">https://mp.weixin.qq.com/s/hDJs6iG_YPww7yeiPxmZLw</a>?</p> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://c.biancheng.net/view/1366.html"  target="_blank" rel="nofollow">http://c.biancheng.net/view/1366.html</a></p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-69171.htm">SpringCloud系列之五&#8212;集中配置组件Config+消息总线Bus</a></p>
                                        <p>下一个：<a href="/news/article-69822.htm">全国兽药30强企业 全国兽药30强企业排名</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-36702.htm" title="tf.train.latest_checkpoint()报错，路径错误">tf.train.latest_checkpoint()报错，路径错误</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-10-free-nekoray-node.htm" title="「2月10日」最高速度18.7M/S，2025年Nekoray每天更新免费机场订阅分享">「2月10日」最高速度18.7M/S，2025年Nekoray每天更新免费机场订阅分享</a></li>
                        <li class="py-2"><a href="/news/article-49574.htm" title="【SpringMVC笔记02】SpringMVC接收请求参数的几种方式">【SpringMVC笔记02】SpringMVC接收请求参数的几种方式</a></li>
                        <li class="py-2"><a href="/news/article-67229.htm" title="开一家拼多多网店要多少钱（开个拼多多网店大概多少钱）">开一家拼多多网店要多少钱（开个拼多多网店大概多少钱）</a></li>
                        <li class="py-2"><a href="/news/article-52198.htm" title="国内前十名的兽药厂家排名（国内十大兽药厂排名）">国内前十名的兽药厂家排名（国内十大兽药厂排名）</a></li>
                        <li class="py-2"><a href="/news/article-60557.htm" title="济南免费领养宠物狗在哪里（济南免费领养宠物狗在哪里办理）">济南免费领养宠物狗在哪里（济南免费领养宠物狗在哪里办理）</a></li>
                        <li class="py-2"><a href="/news/article-69822.htm" title="全国兽药30强企业 全国兽药30强企业排名">全国兽药30强企业 全国兽药30强企业排名</a></li>
                        <li class="py-2"><a href="/news/article-61747.htm" title="@DateTimeFormat 和 @JsonFormat 注解">@DateTimeFormat 和 @JsonFormat 注解</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-4-free-nekoray.htm" title="「1月4日」最高速度18.7M/S，2025年Nekoray每天更新免费机场订阅分享">「1月4日」最高速度18.7M/S，2025年Nekoray每天更新免费机场订阅分享</a></li>
                        <li class="py-2"><a href="/news/article-47111.htm" title="被流浪猫咬了多长时间接种疫苗（被流浪猫咬了多久打疫苗）">被流浪猫咬了多长时间接种疫苗（被流浪猫咬了多久打疫苗）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </div>
    <!-- //about section -->
        <!-- footer -->
    <footer class="w3l-footer-16">
        <div class="w3l-footer-16-main">
            <div class="container">
                <div class="below-section mt-5 text-center">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                    <p class="copy-text">
                        Nekoray Github节点订阅官网 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </footer>
    <!-- //footer -->
    <!-- Js scripts -->
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fas fa-level-up-alt" aria-hidden="true"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- //move top -->
    <!-- common jquery plugin -->
    <script src="/assets/website/js/frontend/nekoraygithub/jquery-3.5.1.min.js"></script>
    <!-- //common jquery plugin -->
    <!-- banner image moving effect -->
    <script>
    var lFollowX = 0,
        lFollowY = 0,
        x = 0,
        y = 0,
        friction = 1 / 30;

    function animate() {
        x += (lFollowX - x) * friction;
        y += (lFollowY - y) * friction;

        translate = 'translate(' + x + 'px, ' + y + 'px) scale(1.1)';

        $('.banner-image').css({
            '-webit-transform': translate,
            '-moz-transform': translate,
            'transform': translate
        });

        window.requestAnimationFrame(animate);
    }

    $(window).on('mousemove click', function(e) {

        var lMouseX = Math.max(-100, Math.min(100, $(window).width() / 2 - e.clientX));
        var lMouseY = Math.max(-100, Math.min(100, $(window).height() / 2 - e.clientY));
        lFollowX = (20 * lMouseX) / 100; // 100 : 12 = lMouxeX : lFollow
        lFollowY = (10 * lMouseY) / 100;

    });

    animate();
    </script>
    <!-- //banner image moving effect -->
    <!-- typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["Designer's", "Developer's", "Creator's"];
    const typingDelay = 300;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- owl carousel -->
    <script src="/assets/website/js/frontend/nekoraygithub/owl.carousel.js"></script>
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo2").owlCarousel({
            loop: true,
            nav: false,
            margin: 50,
            responsiveClass: true,
            autoplay: true,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                991: {
                    items: 2,
                    margin: 30,
                    nav: false
                },
                1080: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- //owl carousel -->
    <!-- theme switch js (light and dark)-->
    <script src="/assets/website/js/frontend/nekoraygithub/theme-change.js"></script>
    <script>
    function autoType(elementClass, typingSpeed) {
        var thhis = $(elementClass);
        thhis.css({
            "position": "relative",
            "display": "inline-block"
        });
        thhis.prepend('<div class="cursor" style="right: initial; left:0;"></div>');
        thhis = thhis.find(".text-js");
        var text = thhis.text().trim().split('');
        var amntOfChars = text.length;
        var newString = "";
        thhis.text("|");
        setTimeout(function() {
            thhis.css("opacity", 1);
            thhis.prev().removeAttr("style");
            thhis.text("");
            for (var i = 0; i < amntOfChars; i++) {
                (function(i, char) {
                    setTimeout(function() {
                        newString += char;
                        thhis.text(newString);
                    }, i * typingSpeed);
                })(i + 1, text[i]);
            }
        }, 1500);
    }

    $(document).ready(function() {
        // Now to start autoTyping just call the autoType function with the 
        // class of outer div
        // The second paramter is the speed between each letter is typed.   
        autoType(".type-js", 200);
    });
    </script>
    <!-- //theme switch js (light and dark)-->
    <!-- magnific popup -->
    <script src="/assets/website/js/frontend/nekoraygithub/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //magnific popup -->
    <!-- MENU-JS -->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!-- //MENU-JS -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- //disable body scroll which navbar is in active -->
    <!--bootstrap-->
    <script src="/assets/website/js/frontend/nekoraygithub/bootstrap.min.js"></script>
    <!-- //bootstrap-->
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
    <!-- //Js scripts -->
</body>

</html>