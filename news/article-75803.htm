<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://nekoraygithub.github.io/news/article-75803.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>C#过滤DataTable中空数据和重复数据的示例代码</title>
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
        <meta name="description" content="C#过滤DataTable中的空数据和重复数据 string sql = "select name,age from user"; DataTable data = DB.ExecuteDataTab" />
        <!-- Favicon -->
    <link href="/assets/website/img/nekoraygithub/favicon.ico" rel="icon">

    <meta name="author" content="Nekoray Github节点订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://nekoraygithub.github.io/news/article-75803.htm" />
    <meta property="og:site_name" content="Nekoray Github节点订阅官网" />
    <meta property="og:title" content="C#过滤DataTable中空数据和重复数据的示例代码" />
    <meta property="og:image" content="https://nekoraygithub.github.io/uploads/20240819/c91efc1f7c2113cc2e7f289023f7bb70.webp" />
        <meta property="og:release_date" content="2025-03-17T09:41:23" />
    <meta property="og:updated_time" content="2025-03-17T09:41:23" />
        <meta property="og:description" content="C#过滤DataTable中的空数据和重复数据 string sql = "select name,age from user"; DataTable data = DB.ExecuteDataTab" />
    
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="C#过滤DataTable中空数据和重复数据的示例代码">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- google-fonts -->
    <link href="//fonts.googleapis.com/css2?family=Ubuntu:wght@300;400;500;700&display=swap" rel="stylesheet">
    <!-- //google-fonts -->
    <!-- Font-Awesome-Icons-CSS -->
    <link rel="stylesheet" href="/assets/website/css/nekoraygithub/fontawesome-all.min.css">
    <!-- Template CSS Style link -->
    <link rel="stylesheet" href="/assets/website/css/nekoraygithub/style-starter.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-PLCXEZFQTC"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-PLCXEZFQTC');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!--header-->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke px-0">
                <a class="navbar-brand" href="/">
                                <span>Nekoray Github</span>
                                </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-lg-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/free-nodes/">免费节点</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/client.htm">客户端</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/news/">新闻资讯</a>
                        </li>
                                            </ul>
                </div>
                <!-- //search button -->
                <!-- toggle switch for light and dark theme -->
                <div class="cont-ser-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!--//header-->
    <!-- inner banner -->
    <div class="inner-banner">
        <section class="w3l-breadcrumb">
            <div class="container">
                <h1 class="inner-text-title font-weight-bold mb-2">C#过滤DataTable中空数据和重复数据的示例代码</h1>
                <ul class="breadcrumbs-custom-path">
                    <li><a href="/">首页</a></li>
                    <li><a href="/news/"><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span>新闻资讯</a></li>
                    <li class="active"><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span>正文</li>
                </ul>
            </div>
        </section>
    </div>
    <!-- //inner banner -->
    <!-- about section -->
    <div class="w3l-content-photo-5 py-5">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="NekoRayNode节点订阅站" data-url="https://nekoraynode.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-light"> <p>C#过滤DataTable中的空数据和重复数据</p> <pre><code class="prism language-csharp"><span class="token keyword">string</span> sql <span class="token operator">=</span> <span class="token string">"select name,age from user"</span><span class="token punctuation">;</span> <span class="token class-name">DataTable</span> data <span class="token operator">=</span> DB<span class="token punctuation">.</span><span class="token function">ExecuteDataTable</span><span class="token punctuation">(</span><span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//得到DataTable</span>   <span class="token comment">// ------------start 去重-------------------</span> <span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> distinctcols <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>Columns<span class="token punctuation">.</span>Count<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name">DataColumn</span> dc <span class="token keyword">in</span> data<span class="token punctuation">.</span>Columns<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>  distinctcols<span class="token punctuation">[</span>dc<span class="token punctuation">.</span>Ordinal<span class="token punctuation">]</span> <span class="token operator">=</span> dc<span class="token punctuation">.</span>ColumnName<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token class-name">DataView</span> mydataview <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataView</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token class-name">DataTable</span> data1 <span class="token operator">=</span> mydataview<span class="token punctuation">.</span><span class="token function">ToTable</span><span class="token punctuation">(</span><span class="token keyword">true</span><span class="token punctuation">,</span> distinctcols<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ------------end  -------------------</span>   <span class="token comment">// ------------start 去null-------------------</span> <span class="token class-name">DataTable</span> data2 <span class="token operator">=</span> data1<span class="token punctuation">.</span><span class="token function">Clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//克隆表</span> <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name">DataRow</span> drItem <span class="token keyword">in</span> data1<span class="token punctuation">.</span>Rows<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     <span class="token comment">//过滤，判断条件的下标自己控制</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">IsNullOrWhiteSpace</span><span class="token punctuation">(</span>drItem<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">IsNullOrWhiteSpace</span><span class="token punctuation">(</span>drItem<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">{<!-- --></span>   data2<span class="token punctuation">.</span>Rows<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>drItem<span class="token punctuation">.</span>ItemArray<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token comment">// ------------end-------------------</span>   <span class="token comment">/** 下面没啥用，增加一行空白行，搜索的时候当全部搜索用 */</span> <span class="token class-name">DataRow</span> row <span class="token operator">=</span> data2<span class="token punctuation">.</span><span class="token function">NewRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> data2<span class="token punctuation">.</span>Rows<span class="token punctuation">.</span><span class="token function">InsertAt</span><span class="token punctuation">(</span>row<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">return</span> data2<span class="token punctuation">;</span> </code></pre> <p>附：c# datatable根据某个条件过滤数据</p> <p>判断DataTable中某一行某列的数据为空值的办法</p> <p>需要使用DataRow类自带的一个函数IsNull。</p> <pre><code class="prism language-csharp"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>DataRow<span class="token punctuation">.</span><span class="token function">IsNull</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token keyword">if</span><span class="token punctuation">(</span>Convert<span class="token punctuation">.</span><span class="token function">IsDBNull</span><span class="token punctuation">(</span>Row<span class="token punctuation">.</span>ItemArray<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> </code></pre> <p>在DataReader（如SqlDataReader）有相同功能的IsDBNull函数</p> <p>datatable根据某个条件过滤数据</p> <pre><code class="prism language-csharp"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">DataTable</span> <span class="token function">TblFilter</span><span class="token punctuation">(</span><span class="token class-name">DataTable</span> sourceTable<span class="token punctuation">,</span> <span class="token keyword">string</span> condition<span class="token punctuation">)</span>     <span class="token punctuation">{<!-- --></span>       <span class="token keyword">var</span> tempDt <span class="token operator">=</span> sourceTable<span class="token punctuation">.</span><span class="token function">Clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">var</span> rows <span class="token operator">=</span> sourceTable<span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span>condition<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token keyword">var</span> dr <span class="token keyword">in</span> rows<span class="token punctuation">)</span>       <span class="token punctuation">{<!-- --></span>         tempDt<span class="token punctuation">.</span><span class="token function">ImportRow</span><span class="token punctuation">(</span>dr<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">}</span>       <span class="token keyword">return</span> tempDt<span class="token punctuation">;</span>     <span class="token punctuation">}</span>         <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">DataTable</span> <span class="token function">TblFilter</span><span class="token punctuation">(</span><span class="token class-name">DataTable</span> sourceTable<span class="token punctuation">,</span> <span class="token keyword">string</span> condition<span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> columns<span class="token punctuation">)</span>     <span class="token punctuation">{<!-- --></span>       <span class="token keyword">var</span> tempDt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token keyword">var</span> t <span class="token keyword">in</span> columns<span class="token punctuation">)</span>       <span class="token punctuation">{<!-- --></span>         tempDt<span class="token punctuation">.</span>Columns<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">}</span>       <span class="token keyword">var</span> rows <span class="token operator">=</span> sourceTable<span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span>condition<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token keyword">var</span> dr <span class="token keyword">in</span> rows<span class="token punctuation">)</span>       <span class="token punctuation">{<!-- --></span>         <span class="token keyword">var</span> newDr <span class="token operator">=</span> tempDt<span class="token punctuation">.</span><span class="token function">NewRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token keyword">var</span> t <span class="token keyword">in</span> columns<span class="token punctuation">)</span>         <span class="token punctuation">{<!-- --></span>           newDr<span class="token punctuation">[</span>t<span class="token punctuation">.</span><span class="token function">Split</span><span class="token punctuation">(</span><span class="token string">':'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> dr<span class="token punctuation">[</span>t<span class="token punctuation">.</span><span class="token function">Split</span><span class="token punctuation">(</span><span class="token string">':'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>         tempDt<span class="token punctuation">.</span>Rows<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>newDr<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">}</span>       <span class="token keyword">return</span> tempDt<span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">DataTable</span> <span class="token function">TblFilter</span><span class="token punctuation">(</span><span class="token class-name">DataTable</span> sourceTable<span class="token punctuation">,</span> <span class="token keyword">string</span> condition<span class="token punctuation">)</span>     <span class="token punctuation">{<!-- --></span>       <span class="token keyword">var</span> tempDt <span class="token operator">=</span> sourceTable<span class="token punctuation">.</span><span class="token function">Clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">var</span> rows <span class="token operator">=</span> sourceTable<span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span>condition<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token keyword">var</span> dr <span class="token keyword">in</span> rows<span class="token punctuation">)</span>       <span class="token punctuation">{<!-- --></span>         tempDt<span class="token punctuation">.</span><span class="token function">ImportRow</span><span class="token punctuation">(</span>dr<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">}</span>       <span class="token keyword">return</span> tempDt<span class="token punctuation">;</span>     <span class="token punctuation">}</span>       <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">DataTable</span> <span class="token function">TblFilter</span><span class="token punctuation">(</span><span class="token class-name">DataTable</span> sourceTable<span class="token punctuation">,</span> <span class="token keyword">string</span> condition<span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> columns<span class="token punctuation">)</span>     <span class="token punctuation">{<!-- --></span>       <span class="token keyword">var</span> tempDt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token keyword">var</span> t <span class="token keyword">in</span> columns<span class="token punctuation">)</span>       <span class="token punctuation">{<!-- --></span>         tempDt<span class="token punctuation">.</span>Columns<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">}</span>       <span class="token keyword">var</span> rows <span class="token operator">=</span> sourceTable<span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span>condition<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token keyword">var</span> dr <span class="token keyword">in</span> rows<span class="token punctuation">)</span>       <span class="token punctuation">{<!-- --></span>         <span class="token keyword">var</span> newDr <span class="token operator">=</span> tempDt<span class="token punctuation">.</span><span class="token function">NewRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token keyword">var</span> t <span class="token keyword">in</span> columns<span class="token punctuation">)</span>         <span class="token punctuation">{<!-- --></span>           newDr<span class="token punctuation">[</span>t<span class="token punctuation">.</span><span class="token function">Split</span><span class="token punctuation">(</span><span class="token string">':'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> dr<span class="token punctuation">[</span>t<span class="token punctuation">.</span><span class="token function">Split</span><span class="token punctuation">(</span><span class="token string">':'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>         tempDt<span class="token punctuation">.</span>Rows<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>newDr<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">}</span>       <span class="token keyword">return</span> tempDt<span class="token punctuation">;</span>     <span class="token punctuation">}</span> </code></pre> <p>sql语句中left,right函数取字段的左或者右几位数字</p> <pre><code class="prism language-csharp"><span class="token function">LEFT</span><span class="token punctuation">(</span>shopid<span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span> </code></pre> <p>总结</p> <p>到此这篇关于C#过滤DataTable中空数据和<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.xin3721.com/eschool/CSharpxin3721/"  rel="nofollow">c#教程</a>重复数据的文章就介绍到这了,更多相关C#过滤DataTable空数据和重复数据内容请搜索脚本之家以前的文章或继续浏览下面的相关文章希望大家以后多多支持</p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-75139.htm">不是兽医专业可以考兽医证吗（不是畜牧兽医专业能考兽医资格证吗）</a></p>
                                        <p>下一个：<a href="/news/article-75804.htm">动物疫苗行业排名榜最新（国内动物疫苗龙头企业）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-3-2-free-node-subscribe-links.htm" title="「3月2日」最高速度20M/S，2025年Nekoray每天更新免费机场订阅分享">「3月2日」最高速度20M/S，2025年Nekoray每天更新免费机场订阅分享</a></li>
                        <li class="py-2"><a href="/news/article-38662.htm" title="动物打疫苗在哪打的 动物打疫苗在哪打的啊">动物打疫苗在哪打的 动物打疫苗在哪打的啊</a></li>
                        <li class="py-2"><a href="/news/article-54909.htm" title="益沣动物医院怎么样啊知乎（益沣动物医院怎么样啊知乎招聘）">益沣动物医院怎么样啊知乎（益沣动物医院怎么样啊知乎招聘）</a></li>
                        <li class="py-2"><a href="/news/article-69823.htm" title="三国杀武将卡牌资料库（三国杀武将卡牌资料库纸质版）">三国杀武将卡牌资料库（三国杀武将卡牌资料库纸质版）</a></li>
                        <li class="py-2"><a href="/news/article-51148.htm" title="动物疫苗的作用是什么呢图片 动物疫苗的作用是什么呢图片大全">动物疫苗的作用是什么呢图片 动物疫苗的作用是什么呢图片大全</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-10-free-nekoray.htm" title="「3月10日」最高速度21.8M/S，2025年Nekoray每天更新免费机场订阅分享">「3月10日」最高速度21.8M/S，2025年Nekoray每天更新免费机场订阅分享</a></li>
                        <li class="py-2"><a href="/news/article-68516.htm" title="动物打疫苗多少钱一针（动物注射疫苗）">动物打疫苗多少钱一针（动物注射疫苗）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-12-free-node-subscribe-links.htm" title="「2月12日」最高速度20.6M/S，2025年Nekoray每天更新免费机场订阅分享">「2月12日」最高速度20.6M/S，2025年Nekoray每天更新免费机场订阅分享</a></li>
                        <li class="py-2"><a href="/news/article-40648.htm" title="Tkinter实现一个窗口的菜单栏">Tkinter实现一个窗口的菜单栏</a></li>
                        <li class="py-2"><a href="/news/article-60556.htm" title="动物医院归哪里管的啊 动物医院归哪里管的啊电话">动物医院归哪里管的啊 动物医院归哪里管的啊电话</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">54</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </div>
    <!-- //about section -->
        <!-- footer -->
    <footer class="w3l-footer-16">
        <div class="w3l-footer-16-main">
            <div class="container">
                <div class="below-section mt-5 text-center">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                    <p class="copy-text">
                        Nekoray Github节点订阅官网 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </footer>
    <!-- //footer -->
    <!-- Js scripts -->
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fas fa-level-up-alt" aria-hidden="true"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- //move top -->
    <!-- common jquery plugin -->
    <script src="/assets/website/js/frontend/nekoraygithub/jquery-3.5.1.min.js"></script>
    <!-- //common jquery plugin -->
    <!-- banner image moving effect -->
    <script>
    var lFollowX = 0,
        lFollowY = 0,
        x = 0,
        y = 0,
        friction = 1 / 30;

    function animate() {
        x += (lFollowX - x) * friction;
        y += (lFollowY - y) * friction;

        translate = 'translate(' + x + 'px, ' + y + 'px) scale(1.1)';

        $('.banner-image').css({
            '-webit-transform': translate,
            '-moz-transform': translate,
            'transform': translate
        });

        window.requestAnimationFrame(animate);
    }

    $(window).on('mousemove click', function(e) {

        var lMouseX = Math.max(-100, Math.min(100, $(window).width() / 2 - e.clientX));
        var lMouseY = Math.max(-100, Math.min(100, $(window).height() / 2 - e.clientY));
        lFollowX = (20 * lMouseX) / 100; // 100 : 12 = lMouxeX : lFollow
        lFollowY = (10 * lMouseY) / 100;

    });

    animate();
    </script>
    <!-- //banner image moving effect -->
    <!-- typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["Designer's", "Developer's", "Creator's"];
    const typingDelay = 300;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- owl carousel -->
    <script src="/assets/website/js/frontend/nekoraygithub/owl.carousel.js"></script>
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo2").owlCarousel({
            loop: true,
            nav: false,
            margin: 50,
            responsiveClass: true,
            autoplay: true,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                991: {
                    items: 2,
                    margin: 30,
                    nav: false
                },
                1080: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- //owl carousel -->
    <!-- theme switch js (light and dark)-->
    <script src="/assets/website/js/frontend/nekoraygithub/theme-change.js"></script>
    <script>
    function autoType(elementClass, typingSpeed) {
        var thhis = $(elementClass);
        thhis.css({
            "position": "relative",
            "display": "inline-block"
        });
        thhis.prepend('<div class="cursor" style="right: initial; left:0;"></div>');
        thhis = thhis.find(".text-js");
        var text = thhis.text().trim().split('');
        var amntOfChars = text.length;
        var newString = "";
        thhis.text("|");
        setTimeout(function() {
            thhis.css("opacity", 1);
            thhis.prev().removeAttr("style");
            thhis.text("");
            for (var i = 0; i < amntOfChars; i++) {
                (function(i, char) {
                    setTimeout(function() {
                        newString += char;
                        thhis.text(newString);
                    }, i * typingSpeed);
                })(i + 1, text[i]);
            }
        }, 1500);
    }

    $(document).ready(function() {
        // Now to start autoTyping just call the autoType function with the 
        // class of outer div
        // The second paramter is the speed between each letter is typed.   
        autoType(".type-js", 200);
    });
    </script>
    <!-- //theme switch js (light and dark)-->
    <!-- magnific popup -->
    <script src="/assets/website/js/frontend/nekoraygithub/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //magnific popup -->
    <!-- MENU-JS -->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!-- //MENU-JS -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- //disable body scroll which navbar is in active -->
    <!--bootstrap-->
    <script src="/assets/website/js/frontend/nekoraygithub/bootstrap.min.js"></script>
    <!-- //bootstrap-->
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
    <!-- //Js scripts -->
</body>

</html>