<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://nekoraygithub.github.io/news/article-22591.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>深度学习网络篇——DenseNet</title>
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
        <meta name="description" content="友情提示：请配合原文食用。 论文：Densely Connected Convolutional Networks 论文链接：https://arxiv.org/pdf/1608.06993.pdf " />
        <!-- Favicon -->
    <link href="/assets/website/img/nekoraygithub/favicon.ico" rel="icon">

    <meta name="author" content="Nekoray Github节点订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://nekoraygithub.github.io/news/article-22591.htm" />
    <meta property="og:site_name" content="Nekoray Github节点订阅官网" />
    <meta property="og:title" content="深度学习网络篇——DenseNet" />
    <meta property="og:image" content="https://nekoraygithub.github.io/uploads/20240819/14b4783a310fcc77238eacf524a0c872.webp" />
        <meta property="og:release_date" content="2024-12-07T10:22:10" />
    <meta property="og:updated_time" content="2024-12-07T10:22:10" />
        <meta property="og:description" content="友情提示：请配合原文食用。 论文：Densely Connected Convolutional Networks 论文链接：https://arxiv.org/pdf/1608.06993.pdf " />
    
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="深度学习网络篇——DenseNet">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- google-fonts -->
    <link href="//fonts.googleapis.com/css2?family=Ubuntu:wght@300;400;500;700&display=swap" rel="stylesheet">
    <!-- //google-fonts -->
    <!-- Font-Awesome-Icons-CSS -->
    <link rel="stylesheet" href="/assets/website/css/nekoraygithub/fontawesome-all.min.css">
    <!-- Template CSS Style link -->
    <link rel="stylesheet" href="/assets/website/css/nekoraygithub/style-starter.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-PLCXEZFQTC"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-PLCXEZFQTC');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!--header-->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke px-0">
                                <a class="navbar-brand" href="/">
                    <span>Nekoray Github</span>
                </a>
                                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-lg-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/free-nodes/">免费节点</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/news/">新闻资讯</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- //search button -->
                <!-- toggle switch for light and dark theme -->
                <div class="cont-ser-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!--//header-->
    <!-- inner banner -->
    <div class="inner-banner">
        <section class="w3l-breadcrumb">
            <div class="container">
                <h1 class="inner-text-title font-weight-bold mb-2">深度学习网络篇——DenseNet</h1>
                <ul class="breadcrumbs-custom-path">
                    <li><a href="/">首页</a></li>
                    <li><a href="/news/"><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span>新闻资讯</a></li>
                    <li class="active"><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span>正文</li>
                </ul>
            </div>
        </section>
    </div>
    <!-- //inner banner -->
    <!-- about section -->
    <div class="w3l-content-photo-5 py-5">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="NekoRayNode节点订阅站" data-url="https://nekoraynode.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-tomorrow-night"> <hr/> <h4> <a id="_1" rel="nofollow"></a>友情提示：请配合原文食用。</h4> <p>论文：Densely Connected Convolutional Networks<br /> 论文链接：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://arxiv.org/pdf/1608.06993.pdf"  rel="nofollow">https://arxiv.org/pdf/1608.06993.pdf</a><br /> 代码的github链接：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/liuzhuang13/DenseNet"  rel="nofollow">https://github.com/liuzhuang13/DenseNet</a></p> <hr/> <h3> <a id="0_Motivation_7" rel="nofollow"></a>0° Motivation</h3> <p>硬件突破和大数据集的完善，使原本凉凉的深度学习重新火了。自LeNet以后，学者一直致力于更好地提取特征，继而提出了多样的架构。虽网络各异，但总不过是令深网更深，通道更多。<br /> 然而，思路上革命性的创新(break point) 当属何恺明于2015年提出的残差网络ResNet。虽然ResNet的核心驱动，仍然是令深网有效地变深(让变深有收益，伴随Go Deeper, 准确率会提高),但提出的残差思路，实为一种突破性的贡献。<br /> 深网更深，凸显出一个关键问题：<strong>梯度消失</strong>。本文作者cue了一下ResNet, HighwayNet, FranctalNet 和随机深度网络。分析出共性：在网络架构上，都创造了shortcut。(这是一种 skip-connection，当前层提取结果直传到下一层)。作者领会了一下这么干的核心精神，然后得出了<mark>思路一</mark>：<br /><font color="red">尽力确保 最大化的 层级之间的 信息流动。网络中所有层互相直连。</font><br /> (原文：to ensure maximum information flow between layers in the network, we connect all layers (with matching feature-map sizes) directly with each other.)<br /> 通过训练时随机弃用某些层，随机深度改善了训练。这表明 深网中某些层对提高表现贡献甚微，深网是一种冗余结构。另一方面，受GoogLeNet和FractalNet的启发，作者认为 只要深网够深，这时仅仅增加层内的通道数，就可以提高性能了(没必要动辄成百上千层)。综合这两点，产生了<mark>思路二</mark>：<br /><font color="red">并不极端地令深网更深，通道更多，而是通过特征再利用，提出了一种密集的压缩模型。</font></p> <hr/> <h3> <a id="1DenseNet_17" rel="nofollow"></a>1°DenseNet架构</h3> <h4> <a id="_18" rel="nofollow"></a>非线性环节</h4> <p>根据上述两大思路，作者做出了他的difference， 提出了DenseNet新架构。<br /> 传统CNN每一层前进后，都会产生output，即特征图。这种级联结构，当前层的结果特征图，运至下一层，作为下一层的输入。而DenseNet则是将当前层得到的特征图，输入到所有后续层。显然，对于一个L层网络，传统CNN包含L个层际之间的连接，而DN共包含 1 + 2 +…+L = L(L + 1)/2个层际连接。<br /> 考虑 经过CNN的单张图片，记作X0 。网络共L层，每一层都具备一个非线性环节，记作Hl(·) (P.S.函数H(·)下标l表示层数) (非线性环节可以是BN操作、ReLU、池化、Conv)。 记第l层输出为Xl<br /> 传统前馈卷积网络，将第l层的输入直接输入到l+1层，<span class="katex--inline"><span class="katex"><span class="katex-mathml"></p> <p>         X</p> <p>         l</p> <p>        =</p> <p>        H</p> <p>        l</p> <p>        (</p> <p>         X</p> <p>         l</p> <p>        +</p> <p>        1</p> <p>        )</p> <p>       X_l = Hl(X_l+1)</p> <p>    </span><span class="katex-html"><span class="base"><span class="strut" style="height: 0.83333em; vertical-align: -0.15em;"></span><span class="mord"><span class="mord mathit" style="margin-right: 0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.336108em;"><span class="" style="top: -2.55em; margin-left: -0.07847em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathit mtight" style="margin-right: 0.01968em;">l</span></span></span></span><span class="vlist-s"></span></span><span class="vlist-r"><span class="vlist" style="height: 0.15em;"><span class=""></span></span></span></span></span></span><span class="mspace" style="margin-right: 0.277778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right: 0.277778em;"></span></span><span class="base"><span class="strut" style="height: 1em; vertical-align: -0.25em;"></span><span class="mord mathit" style="margin-right: 0.08125em;">H</span><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mopen">(</span><span class="mord"><span class="mord mathit" style="margin-right: 0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.336108em;"><span class="" style="top: -2.55em; margin-left: -0.07847em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathit mtight" style="margin-right: 0.01968em;">l</span></span></span></span><span class="vlist-s"></span></span><span class="vlist-r"><span class="vlist" style="height: 0.15em;"><span class=""></span></span></span></span></span></span><span class="mspace" style="margin-right: 0.222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right: 0.222222em;"></span></span><span class="base"><span class="strut" style="height: 1em; vertical-align: -0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span><br /> 而ResNet中， 进行了跳跃直连，输入变为<span class="katex--inline"><span class="katex"><span class="katex-mathml"></p> <p>         X</p> <p>         l</p> <p>        =</p> <p>         H</p> <p>         l</p> <p>        (</p> <p>         X</p> <p>         l</p> <p>        −</p> <p>        1</p> <p>        )</p> <p>        +</p> <p>         X</p> <p>          l</p> <p>          −</p> <p>          1</p> <p>       X_l = H_l(X_l-1) + X_{l-1}</p> <p>    </span><span class="katex-html"><span class="base"><span class="strut" style="height: 0.83333em; vertical-align: -0.15em;"></span><span class="mord"><span class="mord mathit" style="margin-right: 0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.336108em;"><span class="" style="top: -2.55em; margin-left: -0.07847em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathit mtight" style="margin-right: 0.01968em;">l</span></span></span></span><span class="vlist-s"></span></span><span class="vlist-r"><span class="vlist" style="height: 0.15em;"><span class=""></span></span></span></span></span></span><span class="mspace" style="margin-right: 0.277778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right: 0.277778em;"></span></span><span class="base"><span class="strut" style="height: 1em; vertical-align: -0.25em;"></span><span class="mord"><span class="mord mathit" style="margin-right: 0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.336108em;"><span class="" style="top: -2.55em; margin-left: -0.08125em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathit mtight" style="margin-right: 0.01968em;">l</span></span></span></span><span class="vlist-s"></span></span><span class="vlist-r"><span class="vlist" style="height: 0.15em;"><span class=""></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathit" style="margin-right: 0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.336108em;"><span class="" style="top: -2.55em; margin-left: -0.07847em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathit mtight" style="margin-right: 0.01968em;">l</span></span></span></span><span class="vlist-s"></span></span><span class="vlist-r"><span class="vlist" style="height: 0.15em;"><span class=""></span></span></span></span></span></span><span class="mspace" style="margin-right: 0.222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right: 0.222222em;"></span></span><span class="base"><span class="strut" style="height: 1em; vertical-align: -0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right: 0.222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right: 0.222222em;"></span></span><span class="base"><span class="strut" style="height: 0.891661em; vertical-align: -0.208331em;"></span><span class="mord"><span class="mord mathit" style="margin-right: 0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.336108em;"><span class="" style="top: -2.55em; margin-left: -0.07847em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathit mtight" style="margin-right: 0.01968em;">l</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s"></span></span><span class="vlist-r"><span class="vlist" style="height: 0.208331em;"><span class=""></span></span></span></span></span></span></span></span></span></span><br /> 有如电流中分离出直流分量，这种操作加大了梯度流动，使训练更为容易。但作者认为单纯地以这种求和方式累加Hl(Xl-1)和Xl-1 会阻碍网络中的信息流动。(我get不到这一点)<br /> 在DN中，这种操作变成了 <span class="katex--inline"><span class="katex"><span class="katex-mathml"></p> <p>         X</p> <p>         l</p> <p>        =</p> <p>         H</p> <p>         l</p> <p>        (</p> <p>         X</p> <p>         0</p> <p>        ,</p> <p>         X</p> <p>         1</p> <p>        …</p> <p>        ,</p> <p>         X</p> <p>          l</p> <p>          −</p> <p>          1</p> <p>        )</p> <p>       X_l = H_l(X_0, X_1 …, X_{l-1})</p> <p>    </span><span class="katex-html"><span class="base"><span class="strut" style="height: 0.83333em; vertical-align: -0.15em;"></span><span class="mord"><span class="mord mathit" style="margin-right: 0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.336108em;"><span class="" style="top: -2.55em; margin-left: -0.07847em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathit mtight" style="margin-right: 0.01968em;">l</span></span></span></span><span class="vlist-s"></span></span><span class="vlist-r"><span class="vlist" style="height: 0.15em;"><span class=""></span></span></span></span></span></span><span class="mspace" style="margin-right: 0.277778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right: 0.277778em;"></span></span><span class="base"><span class="strut" style="height: 1em; vertical-align: -0.25em;"></span><span class="mord"><span class="mord mathit" style="margin-right: 0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.336108em;"><span class="" style="top: -2.55em; margin-left: -0.08125em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathit mtight" style="margin-right: 0.01968em;">l</span></span></span></span><span class="vlist-s"></span></span><span class="vlist-r"><span class="vlist" style="height: 0.15em;"><span class=""></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathit" style="margin-right: 0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.301108em;"><span class="" style="top: -2.55em; margin-left: -0.07847em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s"></span></span><span class="vlist-r"><span class="vlist" style="height: 0.15em;"><span class=""></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right: 0.166667em;"></span><span class="mord"><span class="mord mathit" style="margin-right: 0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.301108em;"><span class="" style="top: -2.55em; margin-left: -0.07847em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s"></span></span><span class="vlist-r"><span class="vlist" style="height: 0.15em;"><span class=""></span></span></span></span></span></span><span class="mspace" style="margin-right: 0.166667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right: 0.166667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right: 0.166667em;"></span><span class="mord"><span class="mord mathit" style="margin-right: 0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.336108em;"><span class="" style="top: -2.55em; margin-left: -0.07847em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathit mtight" style="margin-right: 0.01968em;">l</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s"></span></span><span class="vlist-r"><span class="vlist" style="height: 0.208331em;"><span class=""></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span><br /> 实验中定义了操作Hl(·)，它由3个连续操作组成，顺序是：<strong>BN - ReLU -Conv</strong><br /><img decoding="async" src="http://img.555519.xyz/uploads/20230217/d003e9c9541730e3a6cda8d805c19842.jpg" alt="深度学习网络篇——DenseNet"></p> <h4> <a id="_30" rel="nofollow"></a>池化层</h4> <p><strong>如果来自先前各的特征图size不同，那么就不能统一作为某一层的输入了。</strong> 然而，CNN不能避免通过池化，实现下采样降维。<strong>为解决这一矛盾，我们将网络划分为多个密集连接的密集块。</strong> 见图2。<br /> 指定密集块与块之间的层为过渡层，该层可以进行卷积核池化。每个密集块是一个”微型DenseNet”。每个密集块中特征图大小统一，降维操作则是通过块与块之间的过渡层实现。本实验中，过渡层为：BN + 1×1卷积 + 2×2池化。<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230217/a8dae57cb5fa9a09841c6ee059678ef0.jpg" alt="深度学习网络篇——DenseNet"></p> <h4> <a id="_35" rel="nofollow"></a>增长率</h4> <p>输入原始图片，初始进行一次卷积生成k0 张特征图。随后每前进一层，即经过一次非线性环节H(·)，就新生成K张特征图。显然，则第m层一共拥有k0 + k×（m-1）个特征图作为输入。实际上，k是衡量整个网络增长率(网络架构大小)的超参数。(k越大，FM越多，模型越庞大)。实验表明，即使很小的增长率，就足矣获得好结果了。</p> <h4> <a id="_37" rel="nofollow"></a>进一步缩小参数量</h4> <h5> <a id="_38" rel="nofollow"></a>瓶颈层</h5> <p>尽管每前进一层，只产生K张新特征图，还是嫌多。在进行3×3卷积之前先用一个 1×1卷积将输入个数降低到 4*k。修改原有的非线性环节。<b>从BN-ReLU-Conv(3×3)变成了 <span class="katex--inline"><span class="katex"><span class="katex-mathml"></p> <p>          H</p> <p>          l</p> <p>         (</p> <p>         ⋅</p> <p>         )</p> <p>         =</p> <p>         B</p> <p>         N</p> <p>         −</p> <p>         R</p> <p>         e</p> <p>         L</p> <p>         U</p> <p>         −</p> <p>         C</p> <p>         o</p> <p>         n</p> <p>         v</p> <p>         (</p> <p>         1</p> <p>         ×</p> <p>         1</p> <p>         )</p> <p>         −</p> <p>         B</p> <p>         N</p> <p>         −</p> <p>         R</p> <p>         e</p> <p>         L</p> <p>         U</p> <p>         −</p> <p>         C</p> <p>         o</p> <p>         n</p> <p>         v</p> <p>         (</p> <p>         3</p> <p>         ×</p> <p>         3</p> <p>         )</p> <p>        H_l(·)= BN-ReLU-Conv(1×1)-BN-ReLU-Conv(3×3)</p> <p>     </span><span class="katex-html"><span class="base"><span class="strut" style="height: 1em; vertical-align: -0.25em;"></span><span class="mord"><span class="mord mathit" style="margin-right: 0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.336108em;"><span class="" style="top: -2.55em; margin-left: -0.08125em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathit mtight" style="margin-right: 0.01968em;">l</span></span></span></span><span class="vlist-s"></span></span><span class="vlist-r"><span class="vlist" style="height: 0.15em;"><span class=""></span></span></span></span></span></span><span class="mopen">(</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right: 0.166667em;"></span><span class="mclose">)</span><span class="mspace" style="margin-right: 0.277778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right: 0.277778em;"></span></span><span class="base"><span class="strut" style="height: 0.76666em; vertical-align: -0.08333em;"></span><span class="mord mathit" style="margin-right: 0.05017em;">B</span><span class="mord mathit" style="margin-right: 0.10903em;">N</span><span class="mspace" style="margin-right: 0.222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right: 0.222222em;"></span></span><span class="base"><span class="strut" style="height: 0.76666em; vertical-align: -0.08333em;"></span><span class="mord mathit" style="margin-right: 0.00773em;">R</span><span class="mord mathit">e</span><span class="mord mathit">L</span><span class="mord mathit" style="margin-right: 0.10903em;">U</span><span class="mspace" style="margin-right: 0.222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right: 0.222222em;"></span></span><span class="base"><span class="strut" style="height: 1em; vertical-align: -0.25em;"></span><span class="mord mathit" style="margin-right: 0.07153em;">C</span><span class="mord mathit">o</span><span class="mord mathit">n</span><span class="mord mathit" style="margin-right: 0.03588em;">v</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right: 0.222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right: 0.222222em;"></span></span><span class="base"><span class="strut" style="height: 1em; vertical-align: -0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right: 0.222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right: 0.222222em;"></span></span><span class="base"><span class="strut" style="height: 0.76666em; vertical-align: -0.08333em;"></span><span class="mord mathit" style="margin-right: 0.05017em;">B</span><span class="mord mathit" style="margin-right: 0.10903em;">N</span><span class="mspace" style="margin-right: 0.222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right: 0.222222em;"></span></span><span class="base"><span class="strut" style="height: 0.76666em; vertical-align: -0.08333em;"></span><span class="mord mathit" style="margin-right: 0.00773em;">R</span><span class="mord mathit">e</span><span class="mord mathit">L</span><span class="mord mathit" style="margin-right: 0.10903em;">U</span><span class="mspace" style="margin-right: 0.222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right: 0.222222em;"></span></span><span class="base"><span class="strut" style="height: 1em; vertical-align: -0.25em;"></span><span class="mord mathit" style="margin-right: 0.07153em;">C</span><span class="mord mathit">o</span><span class="mord mathit">n</span><span class="mord mathit" style="margin-right: 0.03588em;">v</span><span class="mopen">(</span><span class="mord">3</span><span class="mspace" style="margin-right: 0.222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right: 0.222222em;"></span></span><span class="base"><span class="strut" style="height: 1em; vertical-align: -0.25em;"></span><span class="mord">3</span><span class="mclose">)</span></span></span></span></span>。</b>将此种结构记作DenseNet-B。</p> <h5> <a id="_40" rel="nofollow"></a>压缩</h5> <p>于过度层中减少FM数目。设一个密集块中含有m个FM作为输入，我们希望产生θm张FM作为输出。( 0&lt;θ&lt;1 ，θ表示紧凑率)。<br /> 在DenseNet-C中，我们令θ=0.5。<br /> 当模型结构即含瓶颈层，又含压缩层时，我们记模型为DenseNet-BC。<br /> 实验中，作者调整了超参数：增长率k和层数L，进行了多组实验。具体实验细节此处略去，详情见论文。实验中全部网络配置见表1。<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230217/7d4941d9d68e3b4b71e613f9cabfe3b9.jpg" alt="深度学习网络篇——DenseNet"></p> <hr/> <h3> <a id="2_49" rel="nofollow"></a>2°实验结果</h3> <p>实验主要针对四大主流数据集：CIFAR10、CIFAR100、SVHN、ImageNet。<br /> (由’+’表示数据增强， 如C10+ 表示数据增强过的CIFAR10)<br /> 模型表现就别问，问就是领先于state-of-art。(主要是全面击败了ResNet)<br /> (实验结果详情此处略 参见原论文表2)<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230217/16bc6aa29484ecd84ad13ed14847d124.jpg" alt="深度学习网络篇——DenseNet"></p> <ol> <li>没有压缩或瓶颈层时，令L和k增加(模型更为庞大)，DenseNets表现更好。 这说明，if DenseNets go deeper, ACC。</li> <li>即使DenseNet 变得很深(100+),优化起来也不困难 收敛快。</li> <li>参数少，效率高。瓶颈层和过渡层进一步缩减了参数规模，亦即进一步增加了参数效率。参数少，效率高。瓶颈层和过渡层进一步缩减了参数规模，亦即进一步增加了参数效率。</li> <li>瓶颈层和过渡层压缩可以有效解决过拟合问题瓶颈层和过渡层压缩可以有效解决过拟合问题。</li> </ol> <hr/> <h3> <a id="3_60" rel="nofollow"></a>3°总结</h3> <p>摘要中，作者概括出DenseNet的几个优点：<br /> 1、减轻了vanishing-gradient（梯度消失）<br /> 2、加强了feature的传递<br /> 3、更有效地利用了feature<br /> 4、一定程度上较少了参数数量<br /> 最后，还遗留一个反直觉的问题：为什么稠密的结构，连接更紧密了，反而参数会变少了呢? 答案十分显然：稠密结构网络深度较低，每层网络的通道数也明显变少-----每层新增K个通道,而传统CNN各层很容易出现上百的通道。<br /> 与ResNet参数对比 见图4<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230217/62cb17e44fb30f569fd620b5168f9bd3.jpg" alt="深度学习网络篇——DenseNet"><br /> 作者提出的这种巧妙的结构，每层学习到的特征，都作为一种历史记录。他们共同作为后继层的输入，显然这比传统的级联并重新学习出特征要效率高的多。因为这种结构特性，每层前进时，需要的通道数也明显变少。(直觉上，我感觉这种结构的网络，和级数的思想很近。通过若干个函数的组合来不断逼近目标函数)<br /> 作者陈述了稠密结构会带来一种隐含的深度监督，我么得get到，故于此贴上原文。</p> <h4> <a id="_71" rel="nofollow"></a>隐含的深度监督</h4> <p>对密集卷积网络的改进精度的一种解释可能是各个层通过较短的连接从损失函数接收额外的监督。 人们可以解释DenseNets执行一种“深度监督”。 先前已经在深度监督的网络（DSN; [20]）中展示了深度监督的好处，这些网络将分类器附加到每个隐藏层，强制中间层学习辨别特征。<br /> DenseNets以隐式方式执行类似的深度监督：网络顶部的单个分类器通过最多两个或三个过渡层为所有层提供直接监督。 然而，DenseNets的损失函数和梯度基本上不那么复杂，因为在所有层之间共享相同的损失函数。</p> <hr/> <h3> <a id="_76" rel="nofollow"></a>完~</h3> <h3> <a id="Thnks_for_reading_77" rel="nofollow"></a>Thnks for reading</h3> <hr/> <h3> <a id="_79" rel="nofollow"></a>附录</h3> <p>论文作者：<br /> 康奈尔大学博士后黄高博士（Gao Huang）<br /> 清华大学本科生刘壮（Zhuang Liu）<br /> Facebook 人工智能研究院研究科学家 Laurens van der Maaten<br /> 康奈尔大学计算机系教授 Kilian Q. Weinberger<br /> 相关：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://iiis.tsinghua.edu.cn/show-6425-1.html"  rel="nofollow">http://iiis.tsinghua.edu.cn/show-6425-1.html</a><br /> 论文相关文献：<br /> [11]K. He, X. Zhang, S. Ren, and J. Sun. Deep residual learning for image recognition. In CVPR, 2016. 1, 2, 3, 4, 5, 6<br /> [13]G. Huang, Y. Sun, Z. Liu, D. Sedra, and K. Q. Weinberger. Deep networks with stochastic depth. In ECCV, 2016. 1, 2, 5, 8<br /> [17]G. Larsson, M. Maire, and G. Shakhnarovich. Fractalnet: Ultra-deep neural networks without residuals. arXiv preprint arXiv:1605.07648, 2016. 1, 3, 5, 6<br /> [34]R. K. Srivastava, K. Greff, and J. Schmidhuber. Training very deep networks. In NIPS, 2015. 1, 2, 5<br /> DenseNet相关报道:<br /> 论文解读：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.sohu.com/a/161923204_651893"  rel="nofollow">https://www.sohu.com/a/161923204_651893</a><br /> 相关解读2: <a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.jianshu.com/p/28f99abcab67"  rel="nofollow">https://www.jianshu.com/p/28f99abcab67</a></p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-22137.htm">重庆宠物领养吧狗（重庆宠物狗领养中心）</a></p>
                                        <p>下一个：<a href="/news/article-22592.htm">宠物驱虫剂什么牌子好（宠物驱虫十大品牌）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-43134.htm" title="北京宠物托运检疫证明去哪里办（北京宠物托运需要哪些证件）">北京宠物托运检疫证明去哪里办（北京宠物托运需要哪些证件）</a></li>
                        <li class="py-2"><a href="/news/article-22135.htm" title="python 在sql语句中使用%s,%d,%f">python 在sql语句中使用%s,%d,%f</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-19-linux-nekoray.htm" title="「12月19日」最高速度20.1M/S，2024年Nekoray每天更新免费机场订阅节点链接">「12月19日」最高速度20.1M/S，2024年Nekoray每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-35594.htm" title="Node 中的模块化 + module对象 + exports对象">Node 中的模块化 + module对象 + exports对象</a></li>
                        <li class="py-2"><a href="/news/article-38173.htm" title="梦里抱着别的女人什么意思啊（梦到抱着别的女人睡觉什么意思）">梦里抱着别的女人什么意思啊（梦到抱着别的女人睡觉什么意思）</a></li>
                        <li class="py-2"><a href="/news/article-37757.htm" title="宠物店狗粮的利润大吗（宠物店卖的狗粮哪些牌子）">宠物店狗粮的利润大吗（宠物店卖的狗粮哪些牌子）</a></li>
                        <li class="py-2"><a href="/news/article-41155.htm" title="动物疫苗和人体疫苗的区别在哪里呢英语（动物疫苗的重要性）">动物疫苗和人体疫苗的区别在哪里呢英语（动物疫苗的重要性）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-1-free-node-subscribe.htm" title="「1月1日」最高速度19M/S，2025年Nekoray每天更新免费机场订阅分享">「1月1日」最高速度19M/S，2025年Nekoray每天更新免费机场订阅分享</a></li>
                        <li class="py-2"><a href="/news/article-47111.htm" title="被流浪猫咬了多长时间接种疫苗（被流浪猫咬了多久打疫苗）">被流浪猫咬了多长时间接种疫苗（被流浪猫咬了多久打疫苗）</a></li>
                        <li class="py-2"><a href="/news/article-27215.htm" title="IDEA Debug过程中使用Drop Frame或Reset Frame实现操作回退">IDEA Debug过程中使用Drop Frame或Reset Frame实现操作回退</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">6</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </div>
    <!-- //about section -->
        <!-- footer -->
    <footer class="w3l-footer-16">
        <div class="w3l-footer-16-main">
            <div class="container">
                <div class="below-section mt-5 text-center">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                    <p class="copy-text">
                        Nekoray Github节点订阅官网 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </footer>
    <!-- //footer -->
    <!-- Js scripts -->
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fas fa-level-up-alt" aria-hidden="true"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- //move top -->
    <!-- common jquery plugin -->
    <script src="/assets/website/js/frontend/nekoraygithub/jquery-3.5.1.min.js"></script>
    <!-- //common jquery plugin -->
    <!-- banner image moving effect -->
    <script>
    var lFollowX = 0,
        lFollowY = 0,
        x = 0,
        y = 0,
        friction = 1 / 30;

    function animate() {
        x += (lFollowX - x) * friction;
        y += (lFollowY - y) * friction;

        translate = 'translate(' + x + 'px, ' + y + 'px) scale(1.1)';

        $('.banner-image').css({
            '-webit-transform': translate,
            '-moz-transform': translate,
            'transform': translate
        });

        window.requestAnimationFrame(animate);
    }

    $(window).on('mousemove click', function(e) {

        var lMouseX = Math.max(-100, Math.min(100, $(window).width() / 2 - e.clientX));
        var lMouseY = Math.max(-100, Math.min(100, $(window).height() / 2 - e.clientY));
        lFollowX = (20 * lMouseX) / 100; // 100 : 12 = lMouxeX : lFollow
        lFollowY = (10 * lMouseY) / 100;

    });

    animate();
    </script>
    <!-- //banner image moving effect -->
    <!-- typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["Designer's", "Developer's", "Creator's"];
    const typingDelay = 300;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- owl carousel -->
    <script src="/assets/website/js/frontend/nekoraygithub/owl.carousel.js"></script>
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo2").owlCarousel({
            loop: true,
            nav: false,
            margin: 50,
            responsiveClass: true,
            autoplay: true,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                991: {
                    items: 2,
                    margin: 30,
                    nav: false
                },
                1080: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- //owl carousel -->
    <!-- theme switch js (light and dark)-->
    <script src="/assets/website/js/frontend/nekoraygithub/theme-change.js"></script>
    <script>
    function autoType(elementClass, typingSpeed) {
        var thhis = $(elementClass);
        thhis.css({
            "position": "relative",
            "display": "inline-block"
        });
        thhis.prepend('<div class="cursor" style="right: initial; left:0;"></div>');
        thhis = thhis.find(".text-js");
        var text = thhis.text().trim().split('');
        var amntOfChars = text.length;
        var newString = "";
        thhis.text("|");
        setTimeout(function() {
            thhis.css("opacity", 1);
            thhis.prev().removeAttr("style");
            thhis.text("");
            for (var i = 0; i < amntOfChars; i++) {
                (function(i, char) {
                    setTimeout(function() {
                        newString += char;
                        thhis.text(newString);
                    }, i * typingSpeed);
                })(i + 1, text[i]);
            }
        }, 1500);
    }

    $(document).ready(function() {
        // Now to start autoTyping just call the autoType function with the 
        // class of outer div
        // The second paramter is the speed between each letter is typed.   
        autoType(".type-js", 200);
    });
    </script>
    <!-- //theme switch js (light and dark)-->
    <!-- magnific popup -->
    <script src="/assets/website/js/frontend/nekoraygithub/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //magnific popup -->
    <!-- MENU-JS -->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!-- //MENU-JS -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- //disable body scroll which navbar is in active -->
    <!--bootstrap-->
    <script src="/assets/website/js/frontend/nekoraygithub/bootstrap.min.js"></script>
    <!-- //bootstrap-->
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
    <!-- //Js scripts -->
</body>

</html>