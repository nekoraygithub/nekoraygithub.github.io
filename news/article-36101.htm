<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://nekoraygithub.github.io/news/article-36101.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>【Python开发】2. 变量、基本数据类型及其转换</title>
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
        <meta name="description" content="本文专栏：Python开发笔记　　点击查看系列文章   本文主要内容：      1. 变量   1.1 变量规则   2. 基本数据类型   2.1 字符串   2.1.1 字符串拼接 2.1.2 " />
        <!-- Favicon -->
    <link href="__ADDON__/img/nekoraygithub/favicon.ico" rel="icon">
    <!-- google-fonts -->
    <link href="//fonts.googleapis.com/css2?family=Ubuntu:wght@300;400;500;700&display=swap" rel="stylesheet">
    <!-- //google-fonts -->
    <!-- Font-Awesome-Icons-CSS -->
    <link rel="stylesheet" href="/assets/website/css/nekoraygithub/fontawesome-all.min.css">
    <!-- Template CSS Style link -->
    <link rel="stylesheet" href="/assets/website/css/nekoraygithub/style-starter.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-PLCXEZFQTC"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-PLCXEZFQTC');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!--header-->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke px-0">
                                <a class="navbar-brand" href="/">
                    <span>Nekoray Github</span>
                </a>
                                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-lg-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/free-nodes/">免费节点</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/news/">新闻资讯</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- //search button -->
                <!-- toggle switch for light and dark theme -->
                <div class="cont-ser-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!--//header-->
    <!-- inner banner -->
    <div class="inner-banner">
        <section class="w3l-breadcrumb">
            <div class="container">
                <h1 class="inner-text-title font-weight-bold mb-2">【Python开发】2. 变量、基本数据类型及其转换</h1>
                <ul class="breadcrumbs-custom-path">
                    <li><a href="/">首页</a></li>
                    <li><a href="/news/"><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span>新闻资讯</a></li>
                    <li class="active"><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span>正文</li>
                </ul>
            </div>
        </section>
    </div>
    <!-- //inner banner -->
    <!-- about section -->
    <div class="w3l-content-photo-5 py-5">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="NekoRayNode节点订阅站" data-url="https://nekoraynode.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <blockquote> <p>本文专栏：<strong><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/cxh_1231/category_10809028.html"  rel="nofollow"><mark>Python开发笔记</mark>　　点击查看系列文章</a></strong></p> </blockquote> <div class="toc"> <h3>本文主要内容：</h3> <ul> <li> <ul> <li> <ul> <li><a href="#1__4" rel="nofollow">1. 变量</a></li> <li> <ul> <li><a href="#11__6" rel="nofollow">1.1 变量规则</a></li> </ul> </li> <li><a href="#2__17" rel="nofollow">2. 基本数据类型</a></li> <li> <ul> <li><a href="#21__19" rel="nofollow">2.1 字符串</a></li> <li> <ul> <li><a href="#211__48" rel="nofollow">2.1.1 字符串拼接</a></li> <li><a href="#212__62" rel="nofollow">2.1.2 大小写转换方法</a></li> <li><a href="#213__87" rel="nofollow">2.1.3 删除空白方法</a></li> </ul> </li> <li><a href="#22__112" rel="nofollow">2.2 整数</a></li> <li><a href="#23__144" rel="nofollow">2.3 浮点数</a></li> <li><a href="#24__188" rel="nofollow">2.4 字符串与数字的转换</a></li> </ul> </li> </ul> </li> </ul> </li> </ul> </div> <h3> <a id="1__4" rel="nofollow"></a>1. 变量</h3> <h4> <a id="11__6" rel="nofollow"></a>1.1 变量规则</h4> <p>在Python中使用变量时，需要遵守一些规则和指南。违反这些规则将引发错误，而指南旨在让你编写的代码更容易阅读和理解。请务必牢记下述有关变量的规则。</p> <ul> <li>变量名只能包含 <code>字母</code> 、 <code>数字</code> 和 <code>下划线</code> 。变量名可以 <code>字母</code> 或 <code>下划线</code> 打头，但不能以 <code>数字</code> 打头，例如，可将变量命名为 <code>message_1</code> ，但不能将其命名为 <code>1_message</code> 。</li> <li>变量名不能包含空格，但可使用下划线来分隔其中的单词。例如，变量名 <code>greeting_message</code> 可行，但变量名 <code>greeting message</code> 会引发错误。</li> <li>不要将Python <code>关键字</code> 和 <code>函数名</code> 用作变量名，即不要使用Python保留用于特殊用途的单词，如 <code>print</code> 。</li> <li>变量名应既简短又具有描述性。例如， <code>name</code> 比 <code>n</code> 好， <code>student_name</code> 比 <code>s_n</code> 好， <code>name_length</code> 比 <code>length_of_persons_name</code> 好。</li> <li>慎用小写字母 <code>l</code> 和大写字母 <code>O</code> ，因为它们可能被人错看成数字 <code>1</code> 和 <code>0</code> 。</li> <li>要创建良好的变量名，需要经过一定的实践，在程序复杂而有趣时尤其如此。随着你编写的程序越来越多，并开始阅读别人编写的代码，将越来越善于创建有意义的变量名。</li> </ul> <h3> <a id="2__17" rel="nofollow"></a>2. 基本数据类型</h3> <h4> <a id="21__19" rel="nofollow"></a>2.1 字符串</h4> <p><strong>字符串</strong> 就是一系列字符。在Python中，用 <code>引号</code> 括起的都是字符串，其中的引号可以是 <code>单引号</code> ，也可以是 <code>双引号</code> 。</p> <p>示例：</p> <pre><code class="prism language-python">str1 <span class="token operator">=</span> <span class="token string">"双引号表示字符串"</span> str2 <span class="token operator">=</span> <span class="token string">'单引号表示字符串'</span> </code></pre> <p>基于此，可以在 <code>双引号</code> 内包含 <code>单引号</code> 字符，也可以在 <code>单引号</code> 内包含 <code>双引号</code> 字符。</p> <p>示例：</p> <pre><code class="prism language-python">str1 <span class="token operator">=</span> <span class="token string">'这是一个“字符串”'</span> str2 <span class="token operator">=</span> <span class="token string">"这也是一个‘字符串’"</span> <span class="token keyword">print</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>str2<span class="token punctuation">)</span> </code></pre> <p>示例输出：</p> <pre><code class="prism language-python">这是一个“字符串” 这也是一个‘字符串’ </code></pre> <h5> <a id="211__48" rel="nofollow"></a>2.1.1 字符串拼接</h5> <p>Python使用加号（+）来合并字符串。</p> <p>示例：</p> <pre><code class="prism language-python">str1 <span class="token operator">=</span> <span class="token string">'Hello'</span> str2 <span class="token operator">=</span> <span class="token string">'World'</span> <span class="token keyword">print</span><span class="token punctuation">(</span>str1 <span class="token operator">+</span> <span class="token string">' '</span> <span class="token operator">+</span> str2<span class="token punctuation">)</span> </code></pre> <p>输出结果为：Hello World</p> <h5> <a id="212__62" rel="nofollow"></a>2.1.2 大小写转换方法</h5> <ul> <li> <strong>title()</strong> 方法：将字符串的首字母转换成大写</li> <li> <strong>upper()</strong> 方法：将字符串的全部字母转换成大写</li> <li> <strong>lower()</strong> 方法：将字符串的全部字母转换成小写</li> </ul> <p>示例：</p> <pre><code class="prism language-python">str1 <span class="token operator">=</span> <span class="token string">'hello'</span> str2 <span class="token operator">=</span> <span class="token string">'world'</span> str3 <span class="token operator">=</span> <span class="token string">'PYTHON'</span> <span class="token keyword">print</span><span class="token punctuation">(</span>str1<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">' '</span> <span class="token operator">+</span> str2<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>str1<span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>str3<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> </code></pre> <p>示例输出：</p> <pre><code class="prism language-python">Hello World HELLO python </code></pre> <h5> <a id="213__87" rel="nofollow"></a>2.1.3 删除空白方法</h5> <ul> <li> <strong>strip()</strong> 方法：删除字符串开头和末尾的空白</li> <li> <strong>lstrip()</strong> 方法：删除字符串开头的空白</li> <li> <strong>rstrip()</strong> 方法：删除字符串末尾的空白</li> </ul> <p>示例：</p> <pre><code class="prism language-python">str1 <span class="token operator">=</span> <span class="token string">'  hello world  '</span> <span class="token keyword">print</span><span class="token punctuation">(</span>str1<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'END'</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>str1<span class="token punctuation">.</span>lstrip<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'END'</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>str1<span class="token punctuation">.</span>rstrip<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'END'</span><span class="token punctuation">)</span> </code></pre> <p>示例输出：</p> <pre><code class="prism language-python">hello worldEND hello world  END   hello worldEND </code></pre> <h4> <a id="22__112" rel="nofollow"></a>2.2 整数</h4> <p>Python的整数，可以进行四则运算。</p> <p>示例：</p> <pre><code class="prism language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token number">9</span><span class="token operator">+</span><span class="token number">9</span><span class="token operator">+</span><span class="token number">6</span> <span class="token number">24</span> <span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token number">9</span><span class="token operator">*</span><span class="token number">9</span><span class="token operator">-</span><span class="token number">6</span> <span class="token number">75</span> <span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token number">9</span><span class="token operator">-</span><span class="token number">9</span><span class="token operator">/</span><span class="token number">6</span> <span class="token number">7.5</span> </code></pre> <blockquote> <p>注：上述格式代码是在CMD命令行窗口中输入<code>python</code> 关键字后，输入算式。</p> </blockquote> <p>在Python中，两个乘号<code>**</code> 表示乘方。</p> <p>示例：</p> <pre><code class="prism language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token number">2</span><span class="token operator">**</span><span class="token number">3</span> <span class="token number">8</span> <span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token number">3</span><span class="token operator">**</span><span class="token number">3</span> <span class="token number">27</span> <span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token number">10</span><span class="token operator">**</span><span class="token number">5</span> <span class="token number">100000</span> </code></pre> <h4> <a id="23__144" rel="nofollow"></a>2.3 浮点数</h4> <p>Python将带小数点的数字都称为浮点数。</p> <p>示例：</p> <pre><code class="prism language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token number">0.1</span><span class="token operator">+</span><span class="token number">0.1</span> <span class="token number">0.2</span> <span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token number">0.2</span><span class="token operator">+</span><span class="token number">0.2</span> <span class="token number">0.4</span> <span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token number">2</span><span class="token operator">*</span><span class="token number">0.2</span> <span class="token number">0.4</span> </code></pre> <p>从很大程度上说，使用浮点数时都无需考虑其行为。你只需输入要使用的数字，Python通常都会按你期望的方式处理它们。</p> <p>但也有特殊情况，有时结果包含的小数位数可能不确定。比如：</p> <p>示例：</p> <pre><code class="prism language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token number">0.2</span><span class="token operator">+</span><span class="token number">0.1</span> <span class="token number">0.30000000000000004</span> <span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token number">3</span><span class="token operator">*</span><span class="token number">0.1</span> <span class="token number">0.30000000000000004</span> <span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token number">0.1</span> <span class="token operator">+</span> <span class="token number">0.1</span> <span class="token operator">+</span> <span class="token number">0.1</span> <span class="token operator">-</span> <span class="token number">0.3</span> <span class="token number">5.551115123125783e-17</span> <span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token number">0.1</span> <span class="token operator">+</span> <span class="token number">0.1</span> <span class="token operator">+</span> <span class="token number">0.1</span> <span class="token operator">-</span> <span class="token number">0.2</span> <span class="token number">0.10000000000000003</span> </code></pre> <p>上面遇到的这种问题，所有的语言都存在。</p> <p>这是为什么呢？原因如下：</p> <blockquote> <p>在十进制和二进制的转换上，计算机先要把十进制的数转化为二进制，然后再计算。<br /> 但是，在转化中，浮点数转化为二进制，就出问题了。例如：<br /> 十进制的 0.1，转化为二进制是：0.0001100110011001100110011001100110011001100110011…<br /> 也就是说，转化为二进制后，不会精确等于十进制的 0.1。<br /> 同时，计算机存储的位数是有限制的，所以，就出现上述现象了。</p> </blockquote> <h4> <a id="24__188" rel="nofollow"></a>2.4 字符串与数字的转换</h4> <ul> <li>int(x [,base ])　　　　将x转换为一个整数</li> <li>long(x [,base ])　　　将x转换为一个长整数</li> <li>float(x )　　　　　　将x转换到一个浮点数</li> <li>complex(real [,imag ]) 　创建一个复数</li> <li>str(x )　　　　　　　将对象 x 转换为字符串</li> <li>repr(x )　　　　　　将对象 x 转换为表达式字符串</li> <li>eval(str )　　　　　用来计算在字符串中的有效Python表达式,并返回一个对象</li> <li>tuple(s )　　　　　将序列 s 转换为一个元组</li> <li>list(s )　　　　　　将序列 s 转换为一个列表</li> <li>chr(x )　　　　　　将一个整数转换为一个字符</li> <li>unichr(x ) 　　　　将一个整数转换为Unicode字符</li> <li>ord(x )　　　　　将一个字符转换为它的整数值</li> <li>hex(x )　　　　　将一个整数转换为一个十六进制字符串</li> <li>oct(x ) 　　　　　将一个整数转换为一个八进制字符串</li> </ul> <p>示例：</p> <pre><code class="prism language-python">str1 <span class="token operator">=</span> <span class="token string">"1024"</span> str2 <span class="token operator">=</span> <span class="token string">'10.24'</span> num1 <span class="token operator">=</span> <span class="token number">24</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">float</span><span class="token punctuation">(</span>str2<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"I'm "</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>num1<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" years old."</span><span class="token punctuation">)</span> </code></pre> <p>示例输出：</p> <pre><code class="prism language-python"><span class="token number">10240</span> <span class="token number">102.4</span> I'm <span class="token number">24</span> years old<span class="token punctuation">.</span> </code></pre> <p>以上。</p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-35595.htm">Java带返回值的方法的定义和调用详解_java_</a></p>
                                        <p>下一个：<a href="/news/article-36102.htm">开个宠物诊所需要多少钱（开一家宠物诊所收入怎么样）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-36101.htm" title="【Python开发】2. 变量、基本数据类型及其转换">【Python开发】2. 变量、基本数据类型及其转换</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-18-free-subscribe-node.htm" title="「12月18日」最高速度21.1M/S，2024年Nekoray每天更新免费机场订阅节点链接">「12月18日」最高速度21.1M/S，2024年Nekoray每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-25362.htm" title="sql server排查死锁优化性能_MsSql_">sql server排查死锁优化性能_MsSql_</a></li>
                        <li class="py-2"><a href="/news/article-31337.htm" title="宠物粮食品牌上市公司有哪些名字 宠物粮食品牌上市公司有哪些名字呢">宠物粮食品牌上市公司有哪些名字 宠物粮食品牌上市公司有哪些名字呢</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-19-node-share.htm" title="「10月19日」最高速度20.4M/S，2024年Nekoray每天更新免费机场订阅节点链接">「10月19日」最高速度20.4M/S，2024年Nekoray每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-35069.htm" title="宠物粮加工厂原料是什么东西做的（宠物粮食加工厂好做吗）">宠物粮加工厂原料是什么东西做的（宠物粮食加工厂好做吗）</a></li>
                        <li class="py-2"><a href="/news/article-33839.htm" title="Parquet文件格式介绍和读写流程">Parquet文件格式介绍和读写流程</a></li>
                        <li class="py-2"><a href="/news/article-18940.htm" title="聊城宠物狗舍（聊城宠物公司）">聊城宠物狗舍（聊城宠物公司）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-7-free-nekoray.htm" title="「11月7日」最高速度21.2M/S，2024年Nekoray每天更新免费机场订阅节点链接">「11月7日」最高速度21.2M/S，2024年Nekoray每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-23-free-nekoray.htm" title="「11月23日」最高速度22.8M/S，2024年Nekoray每天更新免费机场订阅节点链接">「11月23日」最高速度22.8M/S，2024年Nekoray每天更新免费机场订阅节点链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">21</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">25</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </div>
    <!-- //about section -->
        <!-- footer -->
    <footer class="w3l-footer-16">
        <div class="w3l-footer-16-main">
            <div class="container">
                <div class="below-section mt-5 text-center">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                    <p class="copy-text">
                        Nekoray Github节点订阅官网 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </footer>
    <!-- //footer -->
    <!-- Js scripts -->
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fas fa-level-up-alt" aria-hidden="true"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- //move top -->
    <!-- common jquery plugin -->
    <script src="/assets/website/js/frontend/nekoraygithub/jquery-3.5.1.min.js"></script>
    <!-- //common jquery plugin -->
    <!-- banner image moving effect -->
    <script>
    var lFollowX = 0,
        lFollowY = 0,
        x = 0,
        y = 0,
        friction = 1 / 30;

    function animate() {
        x += (lFollowX - x) * friction;
        y += (lFollowY - y) * friction;

        translate = 'translate(' + x + 'px, ' + y + 'px) scale(1.1)';

        $('.banner-image').css({
            '-webit-transform': translate,
            '-moz-transform': translate,
            'transform': translate
        });

        window.requestAnimationFrame(animate);
    }

    $(window).on('mousemove click', function(e) {

        var lMouseX = Math.max(-100, Math.min(100, $(window).width() / 2 - e.clientX));
        var lMouseY = Math.max(-100, Math.min(100, $(window).height() / 2 - e.clientY));
        lFollowX = (20 * lMouseX) / 100; // 100 : 12 = lMouxeX : lFollow
        lFollowY = (10 * lMouseY) / 100;

    });

    animate();
    </script>
    <!-- //banner image moving effect -->
    <!-- typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["Designer's", "Developer's", "Creator's"];
    const typingDelay = 300;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- owl carousel -->
    <script src="/assets/website/js/frontend/nekoraygithub/owl.carousel.js"></script>
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo2").owlCarousel({
            loop: true,
            nav: false,
            margin: 50,
            responsiveClass: true,
            autoplay: true,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                991: {
                    items: 2,
                    margin: 30,
                    nav: false
                },
                1080: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- //owl carousel -->
    <!-- theme switch js (light and dark)-->
    <script src="/assets/website/js/frontend/nekoraygithub/theme-change.js"></script>
    <script>
    function autoType(elementClass, typingSpeed) {
        var thhis = $(elementClass);
        thhis.css({
            "position": "relative",
            "display": "inline-block"
        });
        thhis.prepend('<div class="cursor" style="right: initial; left:0;"></div>');
        thhis = thhis.find(".text-js");
        var text = thhis.text().trim().split('');
        var amntOfChars = text.length;
        var newString = "";
        thhis.text("|");
        setTimeout(function() {
            thhis.css("opacity", 1);
            thhis.prev().removeAttr("style");
            thhis.text("");
            for (var i = 0; i < amntOfChars; i++) {
                (function(i, char) {
                    setTimeout(function() {
                        newString += char;
                        thhis.text(newString);
                    }, i * typingSpeed);
                })(i + 1, text[i]);
            }
        }, 1500);
    }

    $(document).ready(function() {
        // Now to start autoTyping just call the autoType function with the 
        // class of outer div
        // The second paramter is the speed between each letter is typed.   
        autoType(".type-js", 200);
    });
    </script>
    <!-- //theme switch js (light and dark)-->
    <!-- magnific popup -->
    <script src="/assets/website/js/frontend/nekoraygithub/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //magnific popup -->
    <!-- MENU-JS -->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!-- //MENU-JS -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- //disable body scroll which navbar is in active -->
    <!--bootstrap-->
    <script src="/assets/website/js/frontend/nekoraygithub/bootstrap.min.js"></script>
    <!-- //bootstrap-->
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
    <!-- //Js scripts -->
</body>

</html>